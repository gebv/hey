{
	"PkgName": "models",
	"Imports": ["strings", "encoding/base64", "github.com/golang/glog", "github.com/satori/go.uuid"],
	"Models": [
		{
			"Name": "EventDTO",
			"Type": "dto",
			"FactoryCustomCode": [],
			"Implements": ["DTOAbstract"],
			"Fields": [
				{
					"Name": "ClientId",
					"Type": "string",
					"Tags": {
						"json": "-"
					}
				},
				{
					"Name": "EventId",
					"Type": "string",
					"Tags": {
						"json": "-"
					}
				},

				{	
					"Comment": "uri channelname:threadname:etc...",
					"Name": "Thread", 
					"Type": "string"
				},
				{
					"Name": "Creator",
					"Type": "string"
				},
				{
					"Name": "ParentEventId",
					"Type": "string"	
				},

				{
					"Comment": "base64",
					"Name": "DataBase64",
					"Type": "string"
				},

				{
					"Comment": "Type default: {m: ''}",
					"Name": "ExtFlags",
					"Type": "StringArray"
				}
			],
			"Transformer": {
				"To": [
					{
						"Name": "ChannelDTO",
						"Map": {
							"ClientId": "ClientId"
						},
						"Custom": [
							"dto.ExtId = strings.Split(model.Thread, \":\")[0]"
						]
					},
					{
						"Name": "ThreadDTO",
						"Map": {
							"ClientId": "ClientId",
							"EventCreator": "Creator",
							"ExtId": "Thread"
						}
					},
					{
						"Name": "UserDTO",
						"Map": {
							"ClientId": "ClientId",
							"ExtId": "Creator"
						}
					}
				]
			}
		},
		{
			"Name": "Event",
			"Type": "database",
			"TableName": "events",
			"Implements": ["ModelAbstract"],
			"FactoryCustomCode": [],
			"Fields": [
				{
					"Name": "EventId",
					"Type": "uuid.UUID",
					"IsPrimaryKey": true
				},
				{
					"Name": "ClientId",
					"Type": "uuid.UUID"
				},
				{
					"Name": "ChannelId",
					"Type": "uuid.UUID"
				},
				{
					"Name": "ThreadId",
					"Type": "uuid.UUID"
				},

				{
					"Name": "Creator",
					"Type": "uuid.UUID"
				},

				{
					"Name": "ParentEventId",
					"Type": "uuid.UUID"
				},
				{
					"Name": "ParentThreadId",
					"Type": "uuid.UUID"
				},
				{
					"Name": "BranchThreadId",
					"Type": "uuid.UUID"
				},


				{
					"Name": "Data",
					"Type": "[]byte"
				},

				{
					"Name": "ExtFlags",
					"Type": "[]string"
				},
				{
					"Name": "Flags",
					"Type": "[]string"
				}
			],
			"Transformer": {
				"From": [
					{
						"Name": "EventDTO",
						"Map": {
						},
						"Custom": [
							"model.ExtFlags = []string(dto.ExtFlags)",
							"model.ClientId = uuid.FromStringOrNil(dto.ClientId)",
							"model.EventId = uuid.FromStringOrNil(dto.EventId)",
							"model.Creator = uuid.FromStringOrNil(dto.Creator)",
							"model.ParentEventId = uuid.FromStringOrNil(dto.ParentEventId)",
							"var err error",
							"model.Data, err = base64.StdEncoding.DecodeString(dto.DataBase64)",
							"if err != nil { return err }"
						]
					}
				]
			}
		}
	]
}